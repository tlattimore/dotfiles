syntax enable
colorscheme base16-default
set background=dark
set clipboard=unnamed
set expandtab
set tabstop=2
set shiftwidth=2
set autoindent
set smartindent
set nocompatible
set nowrap
set number
set backspace=indent,eol,start
set nobackup
set noswapfile
set t_Co=256
set mouse=a
set laststatus=2
set incsearch
set cursorline

" Inherit the terminals background color.
highlight Normal ctermbg=NONE
" No background behind line numbers
highlight LineNr ctermfg=lightgray ctermbg=NONE
" Comment Highlighting
highlight Comment ctermbg=NONE
" No background on Signcolumn
highlight SignColumn ctermfg=white ctermbg=NONE
" Git Gutter custom settings
highlight GitGutterAdd ctermfg=green ctermbg=NONE
highlight GitGutterChange ctermfg=lightblue ctermbg=NONE
highlight GitGutterDelete ctermfg=red ctermbg=NONE
highlight GitGutterChangeDelete ctermfg=lightblue ctermbg=NONE
" Change Vim Statusline
highlight StatusLine ctermbg=darkgray ctermfg=lightgray
" Highlight line color.
highlight CursorLine ctermbg=235
highlight CursorLineNR ctermbg=235 ctermfg=white
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
"
" Markdown stuff
let g:vim_markdown_folding_disabled=1
let g:vim_markdown_frontmatter=1
let g:marked_app = "Marked"
let g:pencil#wrapModeDefault = 'soft'
augroup pencil
  autocmd!
  autocmd FileType markdown,mkd,md call pencil#init()
  autocmd FileType text         call pencil#init()
augroup END

" Set sign column to always be open.
let g:gitgutter_sign_column_always = 1
" 256 Color palette for base16 color scheme.
let base16colorspace=256
" Enable powerline special fonts.
let g:airline_powerline_fonts=1
" Turn on Vim Airline tabs.
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme = 'airlineish'
" Airline Symbols
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
" unicode symbols
let g:airline_left_sep = ''
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_right_sep = ''
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = '|'

" Send dd to the blackhole.
nnoremap d "_d
vnoremap d "_d

" Shift+tab for command mode.
nmap <S-Tab> <<
" Shift+tab for insert mode.
imap <S-Tab> <Esc><<i
" Shift+tab for visual mode.
vmap <S-Tab> <<
" Wrap gitcommit file types at the appropriate length
filetype indent plugin on

"" Make Drupal file types have php syntax.
if has("autocmd")
  " Drupal *.module and *.install files.
  augroup module
    autocmd BufRead,BufNewFile *.module set filetype=php
    autocmd BufRead,BufNewFile *.install set filetype=php
    autocmd BufRead,BufNewFile *.test set filetype=php
    autocmd BufRead,BufNewFile *.inc set filetype=php
    autocmd BufRead,BufNewFile *.profile set filetype=php
    autocmd BufRead,BufNewFile *.view set filetype=php
  augroup END
endif

" Markdown specific stuff.
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
autocmd Filetype markdown call SetMarkdownOptions()
function SetMarkdownOptions()
  " Enable spellcheck.
  set spell spelllang=en_us
  " Wrap text (without linebreak charecters)
  " I don't want to highlight the current line.
  highlight CursorLine ctermbg=NONE
endfunction

" Remove trailing whitespace on save.
autocmd BufWritePre * :%s/\s\+$//e
